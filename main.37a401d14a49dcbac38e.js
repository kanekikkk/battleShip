(()=>{"use strict";let e=0;function t(e,t,d,i){let s;for(;"0x"!=t.innerHTML;){let t=Math.floor(9*Math.random()),n=Math.floor(10*Math.random());if(t>0&&n>0)if(s=Math.floor(2*Math.random()),1===s){let s=!1;s||(i.classList.add("zero"),s=p(i,t,e,t,n,d,"vert"),i.classList.remove("zero")),s&&d>=1&&(i.classList.add("one"),s=p(i,t,e,t,n,d,"vert"),i.classList.remove("one")),s&&d>=2&&(i.classList.add("two"),s=p(i,t,e,t,n,d,"vert"),i.classList.remove("two")),s&&d>=3&&(i.classList.add("three"),s=p(i,t,e,t,n,d,"vert"),i.classList.remove("three"))}else{let s=!1;s||(i.classList.add("zero"),s=p(i,n,e,t,n,d,"horz"),i.classList.remove("zero")),s&&d>=1&&(i.classList.add("one"),s=p(i,n,e,t,n,d,"horz"),i.classList.remove("one")),s&&d>=2&&(i.classList.add("two"),s=p(i,n,e,t,n,d,"horz"),i.classList.remove("two")),s&&d>=3&&(i.classList.add("three"),s=p(i,n,e,t,n,d,"horz"),i.classList.remove("three"))}}}let d=[];function i(e,t,i){t-1>=0&&d.push({position:i+1+11*(t-1),node:e[i+1+11*t].classList[4],x:t-1,y:i,direction:"-x"}),t+1<9&&d.push({position:i+1+11*(t+1),node:e[i+1+11*t].classList[4],x:t+1,y:i,direction:"+x"}),i-1>=0&&d.push({position:i+11*t,node:e[i+1+11*t].classList[4],x:t,y:i-1,direction:"-y"}),i+1<=10&&d.push({position:i+2+11*t,node:e[i+1+11*t].classList[4],x:t,y:i+1,direction:"+y"})}function s(e){for(let t=0;t<11;t++){h(e,t);for(let d=0;d<10;d++)0===t?m(e,d):"mapForAddingShip"===e.id?a(e,t,d):n(e)}}function n(t){let s=document.createElement("div");s.classList.add("mapBlock","shipBuidingMapBlock"),t.appendChild(s),s.addEventListener("click",(function(){this.classList.contains("flex")||20==e||(document.querySelector("#mapPlayer2").classList.add("pseudo","pseudoColor"),document.querySelector(".right .players").classList.add("pseudo","pseudoColor"),document.querySelector("#mapForAddingShip").classList.remove("pseudoColor"),document.querySelector(".mapForAddingShipContainer .players").classList.remove("pseudoColor"),document.querySelector(".your").classList.add("hide"),document.querySelector(".opposition").classList.remove("hide"),s.classList.length>2?(S(this),++v,f(v,"Human Won")):L(this),function(){let t=!0;for(;t&&20!=v;){let s=document.querySelector("#mapForAddingShip").childNodes;if(d.length>0){let i=d.pop(),n=i.y,a=i.x;s[n+1+11*a].classList.length>3&&i.node===s[n+1+11*a].classList[4]&&!s[n+1+11*a].classList.contains("flex")?(++e,f(e,"Computer Won"),S(s[n+1+11*a]),"-x"===i.direction&&a-1>=0&&d.push({position:n+1+11*(a-1),node:s[n+1+11*a].classList[4],x:a-1,y:n,direction:"-x"}),"+x"===i.direction&&a+1<=9&&d.push({position:n+1+11*(a+1),node:s[n+1+11*a].classList[4],x:a+1,y:n,direction:"+x"}),"-y"===i.direction&&n-1>=0&&d.push({position:n+11*a,node:s[n+1+11*a].classList[4],x:a,y:n-1,direction:"-y"}),"+y"===i.direction&&n+1<=10&&d.push({position:n+2+11*a,node:s[n+1+11*a].classList[4],x:a,y:n+1,direction:"+y"}),t=!1):s[n+1+11*a].classList.length<3&&(L(s[n+1+11*a]),t=!1)}else{let d=Math.floor(11*Math.random()),n=Math.floor(10*Math.random());d>0&&n>=0&&(s[n+1+11*d].classList.contains("flex")||(s[n+1+11*d].classList.length>3?(S(s[n+1+11*d]),e++,f(e,"Computer Won"),i(s,d,n)):s[n+1+11*d].classList.length<3&&L(s[n+1+11*d]),t=!1))}}setTimeout((function(){document.querySelector("#mapForAddingShip").classList.add("pseudo","pseudoColor"),document.querySelector(".mapForAddingShipContainer .players").classList.add("pseudo","pseudoColor"),document.querySelector("#mapPlayer2").classList.remove("pseudo","pseudoColor"),document.querySelector(".right .players").classList.remove("pseudoColor"),document.querySelector(".opposition").classList.add("hide"),document.querySelector(".your").classList.remove("hide")}),500)}())}))}function a(e,t,d){let i=document.createElement("div");i.classList.add("mapBlock","shipBuidingMapBlock"),e.appendChild(i),i.addEventListener("dragover",(function(e){e.preventDefault()})),i.addEventListener("drop",(function(){{let e=document.querySelector(".activated"),s=e.parentNode.parentNode.classList,n=e.classList;"sizeFourShip"===n[0]?"vertical"===s[0]?p(e,t,i.parentNode,t,d,3,"vert"):p(e,d,i.parentNode,t,d,3,"horz"):"sizeThreeShip"===n[0]?"vertical"===s[0]?p(e,t,i.parentNode,t,d,2,"vert"):p(e,d,i.parentNode,t,d,2,"horz"):"sizeTwoShip"===n[0]?"vertical"===s[0]?p(e,t,i.parentNode,t,d,1,"vert"):p(e,d,i.parentNode,t,d,1,"horz"):"vertical"===s[0]?p(e,t,i.parentNode,t,d,0,"vert"):p(e,d,i.parentNode,t,d,0,"horz"),n.remove(n[3])}}))}function r(e,t,d,i,s,n,a){for(let a=0;a<=i-s;a++){let i=e[d+1+a+11*t];i.setAttribute("draggable","true"),i.addEventListener("dragstart",(function(){i.classList.add("dragWhite","activated")})),i.addEventListener("dragend",(function(){i.classList.remove("dragWhite","activated")})),i.classList.add("gray","a"+a,n)}for(let r=1;r<=i-(i-s);r++){let i=e[d+1-r+11*t];i.setAttribute("draggable","true"),i.addEventListener("dragstart",(function(){i.classList.add("dragWhite","activated")})),i.addEventListener("dragend",(function(){i.classList.remove("dragWhite","activated")})),i.classList.add("gray","a"+r,n,a)}}function o(e,t,d,i,s,n,a){for(let a=0;a<=i-s;a++){let i=e[d+1+11*(t+a)];i.setAttribute("draggable","true"),i.addEventListener("dragstart",(function(){i.classList.add("dragWhite","activated")})),i.addEventListener("dragend",(function(){i.classList.remove("dragWhite","activated")})),i.classList.add("gray","a"+a,n)}for(let r=1;r<=i-(i-s);r++){let i=e[d+1+11*(t-r)];i.setAttribute("draggable","true"),i.addEventListener("dragstart",(function(){i.classList.add("dragWhite","activated")})),i.addEventListener("dragend",(function(){i.classList.remove("dragWhite","activated")})),i.classList.add("gray","a"+r,n,a)}}function l(e,t,d,i,s){let n=s.childNodes;for(let s=0;s<=d-i;s++)if(void 0===n[t+1+11*(e+s)]||n[t+1+11*(e+s)].classList.contains("gray"))return!0;for(let s=1;s<=d-(d-i);s++)if(n[t+1+11*(e-s)].classList.contains("gray"))return!0}function c(e,t,d,i,s){let n=s.childNodes;for(let s=0;s<=d-i;s++)if("gray"===n[t+1+s+11*e].classList[2])return!0;for(let s=1;s<=d-(d-i);s++)if("gray"===n[t+1-s+11*e].classList[2])return!0}function u(e){let t=e.parentNode.firstChild.classList[0];document.querySelectorAll("."+t).forEach((e=>{let t=e.innerHTML;t=t.split(""),parseInt(t[0]),t[0]=t[0]-1,t=t.join(""),e.innerHTML=t}))}function p(e,t,d,i,s,n,a){if("one"===e.classList[3]){if((t+(n-1)>9||t-(n-(n-1))<0)&&"horz"===a||(t+(n-1)>11||t-(n-(n-1))<=0)&&"vert"===a)return!0;if("horz"===a){let t=!1;if(t=c(i,s,n,1,d),t)return!0;u(e),r(d.childNodes,i,s,n,1,e.classList[0],a)}else{let t=!1;if(t=l(i,s,n,1,d),t)return!0;u(e),o(d.childNodes,i,s,n,1,e.classList[0],a)}}else if("zero"===e.classList[3]){if(t+n>9&&"horz"===a||t+n>11&&"vert"===a)return!0;if("horz"===a){let t=!1;if(t=c(i,s,n,0,d),t)return!0;u(e),r(d.childNodes,i,s,n,0,e.classList[0],a)}else{let t=!1;if(t=l(i,s,n,0,d),t)return!0;u(e),o(d.childNodes,i,s,n,0,e.classList[0],a)}}else if("two"===e.classList[3]){if((t+(n-2)>9||t-(n-(n-2))<=0)&&"horz"===a||(t+(n-2)>11||t-(n-(n-2))<=0)&&"vert"===a)return!0;if("horz"===a){let t=!1;if(t=c(i,s,n,2,d),t)return!0;u(e),r(d.childNodes,i,s,n,2,e.classList[0],a)}else{let t=!1;if(t=l(i,s,n,2,d),t)return!0;u(e),o(d.childNodes,i,s,n,2,e.classList[0],a)}}else{if(t-n<=0&&"horz"===a||t-n<=0&&"vert"===a)return!0;if("horz"===a){let t=!1;if(t=c(i,s,n,3,d),t)return!0;u(e),r(d.childNodes,i,s,n,3,e.classList[0],a)}else{let t=!1;if(t=l(i,s,n,3,d),t)return!0;u(e),o(d.childNodes,i,s,n,3,e.classList[0],a)}}}function h(e,t){let d=document.createElement("div");d.classList.add("mapNums","flex","random"),e.appendChild(d);let i=document.createElement("h3");i.innerHTML=0===t?"":t,d.appendChild(i)}function m(e,t){let d=document.createElement("div");d.classList.add("mapVar","temp","random"),e.appendChild(d);let i=document.createElement("h3");i.innerHTML=String.fromCharCode(65+t),d.appendChild(i)}function L(e){e.classList.add("flex");let t=document.createElement("div");t.classList.add("blackMark"),e.appendChild(t)}function S(e){e.classList.add("flex");let t=document.createElement("div");t.classList.add("redMark"),e.appendChild(t)}let v=0;function f(e,t){20===e&&(document.querySelector(".gameOver").classList.remove("hide"),document.querySelector(".gameOver h1").innerHTML=t)}function C(e){t(e,document.querySelector(".sizeOneShipCount"),0,document.querySelector(".sizeOneShip")),t(e,document.querySelector(".sizeTwoShipCount"),1,document.querySelector(".sizeTwoShip")),t(e,document.querySelector(".sizeThreeShipCount"),2,document.querySelector(".sizeThreeShip")),t(e,document.querySelector(".sizeFourShipCount"),3,document.querySelector(".sizeFourShip"))}function y(e,t){for(let d=0;d<e;d++)g(t)}function g(e){let t=document.createElement("div");t.classList.add("shipBlock"),e.appendChild(t),t.addEventListener("mousedown",(function(){const e=this.parentNode;let t=e.childNodes;for(let d=0;d<t.length;d++)this===t[d]&&(0===d?e.classList.add("zero"):1===d?e.classList.add("one"):2===d?e.classList.add("two"):3===d&&e.classList.add("three"))})),t.addEventListener("mouseup",(function(){this.parentNode.classList.remove(this.parentNode.classList[3])}))}if(document.querySelector(".menu").addEventListener("click",(function(){document.querySelector("#menuContent").classList.add("hover"),document.querySelector("#menuContent").classList.remove("hide")})),document.querySelector("#menuContent .logo").addEventListener("click",(function(){document.querySelector("#menuContent").classList.remove("hover"),document.querySelector("#menuContent").classList.add("hide")})),!1===JSON.parse(localStorage.getItem("load"))){new Promise((e=>{setTimeout((()=>{localStorage.setItem("load",!0),C(document.querySelector("#mapPlayer2")),document.querySelectorAll(".sizeFourShipCount").forEach((e=>{e.innerHTML="1x"})),document.querySelectorAll(".sizeThreeShipCount").forEach((e=>{e.innerHTML="2x"})),document.querySelectorAll(".sizeTwoShipCount").forEach((e=>{e.innerHTML="3x"})),document.querySelectorAll(".sizeOneShipCount").forEach((e=>{e.innerHTML="4x"})),C(document.querySelector("#mapForAddingShip"))}),20)}))}document.querySelector(".new").addEventListener("click",(function(){window.location.reload()})),document.querySelector(".resume").addEventListener("click",(function(){document.querySelector("#menuContent").classList.remove("hover"),document.querySelector("#menuContent").classList.add("hide")})),function(){let e=document.querySelector("#content"),t=document.createElement("div");t.classList.add("turnShower","hide"),e.appendChild(t);let d=document.createElement("h2");d.innerHTML="Your Turn",d.classList.add("your"),t.appendChild(d),d=document.createElement("h2"),d.innerHTML="Opponent Turn",d.classList.add("opposition","hide"),t.appendChild(d);let i=document.createElement("div");i.setAttribute("id","map"),i.classList.add("flex"),e.appendChild(i);let n=document.createElement("div");n.classList.add("mapForAddingShipContainer"),i.appendChild(n);let a=document.createElement("div");a.setAttribute("id","mapForAddingShip"),n.appendChild(a),a.classList.add("grid"),s(a);let r=document.createElement("h2");r.classList.add("players","hide"),r.innerHTML="Your Board",n.appendChild(r);let o=document.createElement("h2");o.classList.add("err"),o.innerHTML="",n.appendChild(o);let l=document.createElement("div");l.classList.add("typesOfShip"),i.appendChild(l);let c=document.createElement("h1");c.classList.add("ShipTypeName"),c.innerHTML="Arrange Your Ship",l.appendChild(c);let u=document.createElement("div");u.classList.add("horizental","horz"),l.appendChild(u);let p=document.createElement("div");p.classList.add("shipTypeContainer","flex"),u.appendChild(p);let h=document.createElement("h2");h.innerHTML="1x",h.classList.add("sizeFourShipCount"),p.appendChild(h);let m=document.createElement("div");m.classList.add("sizeFourShip","dragable"),p.appendChild(m),m.classList.add("grid"),y(4,m),p=document.createElement("div"),p.classList.add("shipTypeContainer","flex"),u.appendChild(p),h=document.createElement("h2"),h.innerHTML="2x",h.classList.add("sizeThreeShipCount"),p.appendChild(h),m=document.createElement("div"),m.classList.add("sizeThreeShip","dragable"),p.appendChild(m),m.classList.add("grid"),y(3,m),p=document.createElement("div"),p.classList.add("shipTypeContainer","flex"),u.appendChild(p),h=document.createElement("h2"),h.innerHTML="3x",h.classList.add("sizeTwoShipCount"),p.appendChild(h),m=document.createElement("div"),m.classList.add("sizeTwoShip","dragable"),p.appendChild(m),m.classList.add("grid"),y(2,m),p=document.createElement("div"),p.classList.add("shipTypeContainer","flex"),u.appendChild(p),h=document.createElement("h2"),h.innerHTML="4x",h.classList.add("sizeOneShipCount"),p.appendChild(h),m=document.createElement("div"),m.classList.add("sizeOneShip","dragable"),p.appendChild(m),m.classList.add("grid"),y(1,m);let L=document.createElement("div");L.classList.add("vertical","flex","vert"),l.appendChild(L),p=document.createElement("div"),p.classList.add("shipTypeContainer"),L.appendChild(p),h=document.createElement("h2"),h.innerHTML="1x",h.classList.add("sizeFourShipCount"),p.appendChild(h),m=document.createElement("div"),m.classList.add("sizeFourShip","dragable"),p.appendChild(m),m.classList.add("grid"),y(4,m),p=document.createElement("div"),p.classList.add("shipTypeContainer"),L.appendChild(p),h=document.createElement("h2"),h.innerHTML="2x",h.classList.add("sizeThreeShipCount"),p.appendChild(h),m=document.createElement("div"),m.classList.add("sizeThreeShip","dragable"),p.appendChild(m),m.classList.add("grid"),y(3,m),p=document.createElement("div"),p.classList.add("shipTypeContainer"),L.appendChild(p),h=document.createElement("h2"),h.innerHTML="3x",h.classList.add("sizeTwoShipCount"),p.appendChild(h),m=document.createElement("div"),m.classList.add("sizeTwoShip","dragable"),p.appendChild(m),m.classList.add("grid"),y(2,m),p=document.createElement("div"),p.classList.add("shipTypeContainer"),L.appendChild(p),h=document.createElement("h2"),h.innerHTML="4x",h.classList.add("sizeOneShipCount"),p.appendChild(h),m=document.createElement("div"),m.classList.add("sizeOneShip","dragable"),p.appendChild(m),m.classList.add("grid"),y(1,m),m=document.createElement("div"),m.classList.add("buttons","flex"),l.appendChild(m);let S=document.createElement("button");S.classList.add("start"),S.innerHTML="Start",m.appendChild(S),S.addEventListener("click",(function(){let e=document.querySelector(".sizeOneShipCount").innerHTML,t=document.querySelector(".sizeTwoShipCount").innerHTML,d=document.querySelector(".sizeThreeShipCount").innerHTML,i=document.querySelector(".sizeFourShipCount").innerHTML;"0x"===e&&"0x"===t&&"0x"===d&&"0x"===i?(document.querySelector(".turnShower").classList.remove("hide"),document.querySelector(".right").classList.remove("hide"),document.querySelector(".typesOfShip").classList.add("hide"),document.querySelector(".mapForAddingShipContainer .players").classList.remove("hide"),document.querySelector(".mapForAddingShipContainer .players").classList.add("pseudoColor"),document.querySelector("#mapForAddingShip").classList.add("pseudo","pseudoColor","started"),document.querySelector("#mapPlayer2").classList.add("started")):(o.innerHTML="Add all Ship.....",setTimeout((()=>o.innerHTML=""),2e3))})),S=document.createElement("button"),S.classList.add("reset"),S.innerHTML="Reset",m.appendChild(S),S.addEventListener("click",(function(){window.location.reload()})),S=document.createElement("button"),S.classList.add("randomise"),S.innerHTML="Randomise",S.addEventListener("click",(function(){!0===JSON.parse(localStorage.getItem("load"))?(localStorage.setItem("load",!1),window.location.reload()):(document.querySelectorAll(".sizeFourShipCount").forEach((e=>{e.innerHTML="1x"})),document.querySelectorAll(".sizeThreeShipCount").forEach((e=>{e.innerHTML="2x"})),document.querySelectorAll(".sizeTwoShipCount").forEach((e=>{e.innerHTML="3x"})),document.querySelectorAll(".sizeOneShipCount").forEach((e=>{e.innerHTML="4x"})),C(document.querySelector("#mapForAddingShip")),localStorage.setItem("load",!0))})),m.appendChild(S),function(){let e=document.querySelectorAll(".dragable");for(let t=0;t<e.length;t++)e[t].setAttribute("draggable","true"),e[t].addEventListener("dragstart",(function(d){"0x"===e[t].parentNode.firstChild.innerHTML?d.preventDefault():(console.log(e[t]),e[t].classList.add("dragWhite","activated"))})),e[t].addEventListener("dragend",(function(){e[t].classList.remove("dragWhite","activated"),e[t].classList.remove(e[t].classList[3])}))}();let v=document.createElement("div");v.classList.add("right","hide"),i.appendChild(v);let f=document.createElement("div");f.setAttribute("id","mapPlayer2"),v.appendChild(f),f.classList.add("grid"),s(f),d=document.createElement("h2"),d.classList.add("players"),d.innerHTML="Opponent Board",v.appendChild(d)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,